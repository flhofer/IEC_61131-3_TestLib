TYPE myTestData
STRUCT
    tim : DINT;
    In1 : BOOL;
    In2 : BOOL;
    Out1: BOOL;
    Out2: BOOL;
END_STRUCT
END_TYPE

FUNCTION_BLOCK myTestBlock1

CONST
    (* ------------- STATE MACHINE ------------- *)
    (* States for the state machines, Test case and test *)
    sTC_ND         :=16#00;

    (* Test Startup *)
    sT_INIT         :=16#01;
    sT_WAIT         :=16#02;
    sT_START     :=16#03;
    sT_RUN         :=16#04;

    (* Test Shutdown *)
    sT_ABORT     :=16#08;
    sT_STOP         :=16#09;
    sT_END         :=16#0A;
    sT_DEINIT     :=16#0B;

    (* Test Results *)
    sT_PASS         :=16#0C;
    sT_FAIL         :=16#0D;
    sT_ERROR     :=16#0E;

    (* Test Case Startup *)
    sTC_INIT     :=16#10;
    sTC_WAIT     :=16#20;
    sTC_START     :=16#30;
    sTC_RUN         :=16#40;


    (* Test Case Shutdown *)
    sTC_ABORT     :=16#80;
    sTC_STOP     :=16#90;
    sTC_END         :=16#A0;
    sTC_DEINIT     :=16#B0;

    (* Test case Results *)
    sTC_PASS     :=16#C0;
    sTC_FAIL     :=16#D0;
    sTC_ERROR     :=16#E0;
END_CONST

VAR
    ret : DINT ;    
END_VAR

BEGIN

ret := testInit( TestName := 'PrimaryTest', Count := 1);

CASE _tl_global._tls OF

    sT_RUN:
        ret := assertTrue(Value := TRUE, Mode := _tl_const.mAT, Delay := 0);
        ret := assertTrue(Value := FALSE, Mode := _tl_const.mBefore, Delay := 1000);
        ret := assertTrue(Value := TRUE, Mode := _tl_const.mAfter, Delay := 0);

END_CASE;

END_FUNCTION_BLOCK

DATA_BLOCK myTestData1 myTestBlock1

BEGIN

END_DATA_BLOCK